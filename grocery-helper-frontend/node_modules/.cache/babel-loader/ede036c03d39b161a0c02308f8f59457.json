{"ast":null,"code":"import _classCallCheck from \"/Users/790116/Desktop/Bijoy/Personal/ran/grocery-helper-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/790116/Desktop/Bijoy/Personal/ran/grocery-helper-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/790116/Desktop/Bijoy/Personal/ran/grocery-helper-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/790116/Desktop/Bijoy/Personal/ran/grocery-helper-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/790116/Desktop/Bijoy/Personal/ran/grocery-helper-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/790116/Desktop/Bijoy/Personal/ran/grocery-helper-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/790116/Desktop/Bijoy/Personal/ran/grocery-helper-frontend/src/component/GroceryHelperComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport GroceryDataService from '../service/GroceryDataService';\nvar CATEGORY = 'Beverages';\n/** Helper component which is responsible to retrieve grocery item(s) based on actions from user. */\n\nvar GroceryHelperComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GroceryHelperComponent, _Component);\n\n  function GroceryHelperComponent(props) {\n    var _this;\n\n    _classCallCheck(this, GroceryHelperComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroceryHelperComponent).call(this, props));\n    _this.state = {\n      id: _this.props.match.params.id,\n      description: ''\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(GroceryHelperComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(this.state.id); // eslint-disable-next-line\n\n      if (this.state.id == -1) {\n        return;\n      }\n\n      GroceryDataService.retrieveGrocery(CATEGORY, this.state.id).then(function (response) {\n        return _this2.setState({\n          description: response.data.description\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.description) {\n        errors.description = 'Enter a Description';\n      } else if (values.description.length < 5) {\n        errors.description = 'Enter atleast 5 Characters in Description';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var categoryname = CATEGORY;\n      var grocery = {\n        id: this.state.id,\n        category: this.state.category,\n        description: values.description,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id === -1) {\n        GroceryDataService.createGrocery(categoryname, grocery).then(function () {\n          return _this3.props.history.push('/groceries');\n        });\n      } else {\n        GroceryDataService.updateGrocery(categoryname, this.state.id, grocery).then(function () {\n          return _this3.props.history.push('/groceries');\n        });\n      }\n\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          description = _this$state.description,\n          category = _this$state.category,\n          id = _this$state.id;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Grocery\"), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Formik, {\n        initialValues: {\n          id: id,\n          category: category,\n          description: description\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(ErrorMessage, {\n          name: \"description\",\n          component: \"div\",\n          className: \"alert alert-warning\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, \"Grocery Helper Id\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"id\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"Grocery Category\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"category\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })), React.createElement(\"fieldset\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Grocery Helper Description\"), React.createElement(Field, {\n          className: \"form-control\",\n          type: \"text\",\n          name: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-success\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, \"Save\"));\n      })));\n    }\n  }]);\n\n  return GroceryHelperComponent;\n}(Component);\n\nexport default GroceryHelperComponent;","map":{"version":3,"sources":["/Users/790116/Desktop/Bijoy/Personal/ran/grocery-helper-frontend/src/component/GroceryHelperComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","GroceryDataService","CATEGORY","GroceryHelperComponent","props","state","id","match","params","description","onSubmit","bind","validate","console","log","retrieveGrocery","then","response","setState","data","values","errors","length","categoryname","grocery","category","targetDate","createGrocery","history","push","updateGrocery"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport GroceryDataService from '../service/GroceryDataService';\n\nconst CATEGORY = 'Beverages'\n/** Helper component which is responsible to retrieve grocery item(s) based on actions from user. */\nclass GroceryHelperComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id: this.props.match.params.id,\n            description: ''\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n\n        console.log(this.state.id)\n\n        // eslint-disable-next-line\n        if (this.state.id == -1) {\n            return\n        }\n\n        GroceryDataService.retrieveGrocery(CATEGORY, this.state.id)\n            .then(response => this.setState({\n                description: response.data.description\n            }))\n    }\n\n    validate(values) {\n        let errors = {}\n        if (!values.description) {\n            errors.description = 'Enter a Description'\n        } else if (values.description.length < 5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n\n        return errors\n\n    }\n\n    onSubmit(values) {\n        let categoryname = CATEGORY\n\n        let grocery = {\n            id: this.state.id,\n            category: this.state.category,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            GroceryDataService.createGrocery(categoryname, grocery)\n                .then(() => this.props.history.push('/groceries'))\n        } else {\n            GroceryDataService.updateGrocery(categoryname, this.state.id, grocery)\n                .then(() => this.props.history.push('/groceries'))\n        }\n\n        console.log(values);\n    }\n\n    render() {\n\n        let { description, category, id } = this.state\n\n        return (\n            <div>\n                <h3>Grocery</h3>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ id, category, description }}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\"\n                                        className=\"alert alert-warning\" />\n                                    <fieldset className=\"form-group\">\n                                        <label>Grocery Helper Id</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" disabled />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Grocery Category</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"category\" />\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Grocery Helper Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" />\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GroceryHelperComponent"]},"metadata":{},"sourceType":"module"}